<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- jQuery CDN -->
  <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
  <title>Data</title>
  <link rel="stylesheet" href="../style.css">
</head>
<body>
  <h1>DB에서 받아온 데이터</h1>
  <% for(let i=0; i < log.length; i++){ %>
    <div class="box-item">
      <div class="info-box">
        <p>No.<%= log[i]._id %></p>
        <h3>ID : <%= log[i].아이디 %></h3>
        <h3>PW : <%= log[i].비밀번호 %></h3>
      </div>
      <button type="button" class="delete" data-id="<%= log[i]._id %>">삭제</button>
    </div>
  <% } %>
  <script>
    // Ajax로 삭제 요청하기(Delete)
    // Ajax : 서버랑 통신할 수 있게 도와주는 JS문법
    // Ajax 장점 : 새로고침 없이 서버에 요청할 수 있다.
    $('.delete').on('click', function(e){
      // 삭제 버튼이 클릭된 해당 요소의 데이터 삭제
      // 클릭한 요소의 데이터셋에서 id값을 가져옴
      let dataNum = e.target.dataset.id;
      // console.log(dataNum)
      // let eTarget = e.target;
      let curClick = $(this);
      // console.log(eTarget) // 삭제 버튼을 눌러보면 버튼이 뜸 (html)
      // console.log(curClick) // jQuery 객체 형태로 뜸

      $.ajax({
        // method, url, data
        // method : 서버에 새로고침 없이 delete로 요청
        // url : '요청할 경로'
        // data : 요청과 함께 보낼 데이터
        method : 'DELETE',
        url : '/delete',
        data : {_id : dataNum}
      // Ajax 요청이 성공했을 때 실행할 코드(콜백함수)
      }).done(function(result){
        console.log('요청성공')
        // button의 부모 요소인 .box-item을 찾아서 서서히 안 보이게 
        // 삭제 버튼을 클릭했을 때 새로고침하지 않아도 서서히 안 보이게 해주는 효과
        curClick.parent('.box-item').fadeOut();
      })
    })
  </script>
</body>
</html>